Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Programa
Rule 1     Programa -> Main Funcoes
Rule 2     Main -> MAIN CA Declaracoes Instrucoes CF
Rule 3     Funcoes -> Funcao Funcoes
Rule 4     Funcoes -> <empty>
Rule 5     Funcao -> FUNCAO ID CA Insts CF
Rule 6     Declaracoes -> DECLARACOES CA Decls CF
Rule 7     Decls -> Decl Decls
Rule 8     Decls -> <empty>
Rule 9     Decl -> VAR ID PV
Rule 10    Decl -> VAR ID IGUAL Exp PV
Rule 11    Instrucoes -> INSTRUCOES CA Insts CF
Rule 12    Insts -> Inst Insts
Rule 13    Insts -> <empty>
Rule 14    Inst -> ID IGUAL Exp PV
Rule 15    IFor -> ID IGUAL Exp
Rule 16    Inst -> LER ID PV
Rule 17    Inst -> ESCREVER Frase PV
Rule 18    Inst -> CALL ID PV
Rule 19    Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF
Rule 20    Inst -> IF PA Logica PF CA Insts CF
Rule 21    Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF
Rule 22    Frase -> STRING
Rule 23    Frase -> Exp
Rule 24    Logica -> Logica AND Cond
Rule 25    Logica -> Logica OR Cond
Rule 26    Logica -> NOT Cond
Rule 27    Logica -> Cond
Rule 28    Cond -> Cond MAIOR Exp
Rule 29    Cond -> Cond MENOR Exp
Rule 30    Cond -> Cond MAIORI Exp
Rule 31    Cond -> Cond MENORI Exp
Rule 32    Cond -> Cond II Exp
Rule 33    Cond -> Cond DIF Exp
Rule 34    Cond -> Exp
Rule 35    Exp -> Exp SOMA Termo
Rule 36    Exp -> Exp SUB Termo
Rule 37    Exp -> Termo
Rule 38    Termo -> Termo MUL Fator
Rule 39    Termo -> Termo DIV Fator
Rule 40    Termo -> Termo MOD Fator
Rule 41    Termo -> Fator
Rule 42    Fator -> ( Logica )
Rule 43    Fator -> NUM
Rule 44    Fator -> ID

Terminals, with rules where they appear

(                    : 42
)                    : 42
AND                  : 24
CA                   : 2 5 6 11 19 20 21 21
CALL                 : 18
CF                   : 2 5 6 11 19 20 21 21
DECLARACOES          : 6
DIF                  : 33
DIV                  : 39
DO                   : 19
ELSE                 : 21
ESCREVER             : 17
FOR                  : 19
FUNCAO               : 5
ID                   : 5 9 10 14 15 16 18 44
IF                   : 20 21
IGUAL                : 10 14 15
II                   : 32
INSTRUCOES           : 11
LER                  : 16
MAIN                 : 2
MAIOR                : 28
MAIORI               : 30
MENOR                : 29
MENORI               : 31
MOD                  : 40
MUL                  : 38
NOT                  : 26
NUM                  : 43
OR                   : 25
PA                   : 19 20 21
PF                   : 19 20 21
PV                   : 9 10 14 16 17 18 19
SOMA                 : 35
STRING               : 22
SUB                  : 36
VAR                  : 9 10
error                : 

Nonterminals, with rules where they appear

Cond                 : 24 25 26 27 28 29 30 31 32 33
Decl                 : 7
Declaracoes          : 2
Decls                : 6 7
Exp                  : 10 14 15 23 28 29 30 31 32 33 34 35 36
Fator                : 38 39 40 41
Frase                : 17
Funcao               : 3
Funcoes              : 1 3
IFor                 : 19
Inst                 : 12 19
Instrucoes           : 2
Insts                : 5 11 12 19 20 21 21
Logica               : 19 20 21 24 25 42
Main                 : 1
Programa             : 0
Termo                : 35 36 37 38 39 40

Parsing method: LALR

state 0

    (0) S' -> . Programa
    (1) Programa -> . Main Funcoes
    (2) Main -> . MAIN CA Declaracoes Instrucoes CF

    MAIN            shift and go to state 3

    Programa                       shift and go to state 1
    Main                           shift and go to state 2

state 1

    (0) S' -> Programa .



state 2

    (1) Programa -> Main . Funcoes
    (3) Funcoes -> . Funcao Funcoes
    (4) Funcoes -> .
    (5) Funcao -> . FUNCAO ID CA Insts CF

    $end            reduce using rule 4 (Funcoes -> .)
    FUNCAO          shift and go to state 6

    Funcoes                        shift and go to state 4
    Funcao                         shift and go to state 5

state 3

    (2) Main -> MAIN . CA Declaracoes Instrucoes CF

    CA              shift and go to state 7


state 4

    (1) Programa -> Main Funcoes .

    $end            reduce using rule 1 (Programa -> Main Funcoes .)


state 5

    (3) Funcoes -> Funcao . Funcoes
    (3) Funcoes -> . Funcao Funcoes
    (4) Funcoes -> .
    (5) Funcao -> . FUNCAO ID CA Insts CF

    $end            reduce using rule 4 (Funcoes -> .)
    FUNCAO          shift and go to state 6

    Funcao                         shift and go to state 5
    Funcoes                        shift and go to state 8

state 6

    (5) Funcao -> FUNCAO . ID CA Insts CF

    ID              shift and go to state 9


state 7

    (2) Main -> MAIN CA . Declaracoes Instrucoes CF
    (6) Declaracoes -> . DECLARACOES CA Decls CF

    DECLARACOES     shift and go to state 11

    Declaracoes                    shift and go to state 10

state 8

    (3) Funcoes -> Funcao Funcoes .

    $end            reduce using rule 3 (Funcoes -> Funcao Funcoes .)


state 9

    (5) Funcao -> FUNCAO ID . CA Insts CF

    CA              shift and go to state 12


state 10

    (2) Main -> MAIN CA Declaracoes . Instrucoes CF
    (11) Instrucoes -> . INSTRUCOES CA Insts CF

    INSTRUCOES      shift and go to state 14

    Instrucoes                     shift and go to state 13

state 11

    (6) Declaracoes -> DECLARACOES . CA Decls CF

    CA              shift and go to state 15


state 12

    (5) Funcao -> FUNCAO ID CA . Insts CF
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Insts                          shift and go to state 17
    Inst                           shift and go to state 18

state 13

    (2) Main -> MAIN CA Declaracoes Instrucoes . CF

    CF              shift and go to state 24


state 14

    (11) Instrucoes -> INSTRUCOES . CA Insts CF

    CA              shift and go to state 25


state 15

    (6) Declaracoes -> DECLARACOES CA . Decls CF
    (7) Decls -> . Decl Decls
    (8) Decls -> .
    (9) Decl -> . VAR ID PV
    (10) Decl -> . VAR ID IGUAL Exp PV

    CF              reduce using rule 8 (Decls -> .)
    VAR             shift and go to state 28

    Decls                          shift and go to state 26
    Decl                           shift and go to state 27

state 16

    (14) Inst -> ID . IGUAL Exp PV

    IGUAL           shift and go to state 29


state 17

    (5) Funcao -> FUNCAO ID CA Insts . CF

    CF              shift and go to state 30


state 18

    (12) Insts -> Inst . Insts
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Inst                           shift and go to state 18
    Insts                          shift and go to state 31

state 19

    (16) Inst -> LER . ID PV

    ID              shift and go to state 32


state 20

    (17) Inst -> ESCREVER . Frase PV
    (22) Frase -> . STRING
    (23) Frase -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    STRING          shift and go to state 34
    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Frase                          shift and go to state 33
    Exp                            shift and go to state 35
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 21

    (18) Inst -> CALL . ID PV

    ID              shift and go to state 41


state 22

    (19) Inst -> FOR . PA Inst Logica PV IFor PF DO CA Insts CF

    PA              shift and go to state 42


state 23

    (20) Inst -> IF . PA Logica PF CA Insts CF
    (21) Inst -> IF . PA Logica PF CA Insts CF ELSE CA Insts CF

    PA              shift and go to state 43


state 24

    (2) Main -> MAIN CA Declaracoes Instrucoes CF .

    FUNCAO          reduce using rule 2 (Main -> MAIN CA Declaracoes Instrucoes CF .)
    $end            reduce using rule 2 (Main -> MAIN CA Declaracoes Instrucoes CF .)


state 25

    (11) Instrucoes -> INSTRUCOES CA . Insts CF
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Insts                          shift and go to state 44
    Inst                           shift and go to state 18

state 26

    (6) Declaracoes -> DECLARACOES CA Decls . CF

    CF              shift and go to state 45


state 27

    (7) Decls -> Decl . Decls
    (7) Decls -> . Decl Decls
    (8) Decls -> .
    (9) Decl -> . VAR ID PV
    (10) Decl -> . VAR ID IGUAL Exp PV

    CF              reduce using rule 8 (Decls -> .)
    VAR             shift and go to state 28

    Decl                           shift and go to state 27
    Decls                          shift and go to state 46

state 28

    (9) Decl -> VAR . ID PV
    (10) Decl -> VAR . ID IGUAL Exp PV

    ID              shift and go to state 47


state 29

    (14) Inst -> ID IGUAL . Exp PV
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 48
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 30

    (5) Funcao -> FUNCAO ID CA Insts CF .

    FUNCAO          reduce using rule 5 (Funcao -> FUNCAO ID CA Insts CF .)
    $end            reduce using rule 5 (Funcao -> FUNCAO ID CA Insts CF .)


state 31

    (12) Insts -> Inst Insts .

    CF              reduce using rule 12 (Insts -> Inst Insts .)


state 32

    (16) Inst -> LER ID . PV

    PV              shift and go to state 49


state 33

    (17) Inst -> ESCREVER Frase . PV

    PV              shift and go to state 50


state 34

    (22) Frase -> STRING .

    PV              reduce using rule 22 (Frase -> STRING .)


state 35

    (23) Frase -> Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    PV              reduce using rule 23 (Frase -> Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 36

    (37) Exp -> Termo .
    (38) Termo -> Termo . MUL Fator
    (39) Termo -> Termo . DIV Fator
    (40) Termo -> Termo . MOD Fator

    SOMA            reduce using rule 37 (Exp -> Termo .)
    SUB             reduce using rule 37 (Exp -> Termo .)
    PV              reduce using rule 37 (Exp -> Termo .)
    MAIOR           reduce using rule 37 (Exp -> Termo .)
    MENOR           reduce using rule 37 (Exp -> Termo .)
    MAIORI          reduce using rule 37 (Exp -> Termo .)
    MENORI          reduce using rule 37 (Exp -> Termo .)
    II              reduce using rule 37 (Exp -> Termo .)
    DIF             reduce using rule 37 (Exp -> Termo .)
    )               reduce using rule 37 (Exp -> Termo .)
    AND             reduce using rule 37 (Exp -> Termo .)
    OR              reduce using rule 37 (Exp -> Termo .)
    PF              reduce using rule 37 (Exp -> Termo .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    MOD             shift and go to state 55


state 37

    (41) Termo -> Fator .

    MUL             reduce using rule 41 (Termo -> Fator .)
    DIV             reduce using rule 41 (Termo -> Fator .)
    MOD             reduce using rule 41 (Termo -> Fator .)
    SOMA            reduce using rule 41 (Termo -> Fator .)
    SUB             reduce using rule 41 (Termo -> Fator .)
    PV              reduce using rule 41 (Termo -> Fator .)
    MAIOR           reduce using rule 41 (Termo -> Fator .)
    MENOR           reduce using rule 41 (Termo -> Fator .)
    MAIORI          reduce using rule 41 (Termo -> Fator .)
    MENORI          reduce using rule 41 (Termo -> Fator .)
    II              reduce using rule 41 (Termo -> Fator .)
    DIF             reduce using rule 41 (Termo -> Fator .)
    )               reduce using rule 41 (Termo -> Fator .)
    AND             reduce using rule 41 (Termo -> Fator .)
    OR              reduce using rule 41 (Termo -> Fator .)
    PF              reduce using rule 41 (Termo -> Fator .)


state 38

    (42) Fator -> ( . Logica )
    (24) Logica -> . Logica AND Cond
    (25) Logica -> . Logica OR Cond
    (26) Logica -> . NOT Cond
    (27) Logica -> . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    NOT             shift and go to state 58
    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Logica                         shift and go to state 56
    Cond                           shift and go to state 57
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 39

    (43) Fator -> NUM .

    MUL             reduce using rule 43 (Fator -> NUM .)
    DIV             reduce using rule 43 (Fator -> NUM .)
    MOD             reduce using rule 43 (Fator -> NUM .)
    SOMA            reduce using rule 43 (Fator -> NUM .)
    SUB             reduce using rule 43 (Fator -> NUM .)
    PV              reduce using rule 43 (Fator -> NUM .)
    MAIOR           reduce using rule 43 (Fator -> NUM .)
    MENOR           reduce using rule 43 (Fator -> NUM .)
    MAIORI          reduce using rule 43 (Fator -> NUM .)
    MENORI          reduce using rule 43 (Fator -> NUM .)
    II              reduce using rule 43 (Fator -> NUM .)
    DIF             reduce using rule 43 (Fator -> NUM .)
    )               reduce using rule 43 (Fator -> NUM .)
    AND             reduce using rule 43 (Fator -> NUM .)
    OR              reduce using rule 43 (Fator -> NUM .)
    PF              reduce using rule 43 (Fator -> NUM .)


state 40

    (44) Fator -> ID .

    MUL             reduce using rule 44 (Fator -> ID .)
    DIV             reduce using rule 44 (Fator -> ID .)
    MOD             reduce using rule 44 (Fator -> ID .)
    SOMA            reduce using rule 44 (Fator -> ID .)
    SUB             reduce using rule 44 (Fator -> ID .)
    PV              reduce using rule 44 (Fator -> ID .)
    MAIOR           reduce using rule 44 (Fator -> ID .)
    MENOR           reduce using rule 44 (Fator -> ID .)
    MAIORI          reduce using rule 44 (Fator -> ID .)
    MENORI          reduce using rule 44 (Fator -> ID .)
    II              reduce using rule 44 (Fator -> ID .)
    DIF             reduce using rule 44 (Fator -> ID .)
    )               reduce using rule 44 (Fator -> ID .)
    AND             reduce using rule 44 (Fator -> ID .)
    OR              reduce using rule 44 (Fator -> ID .)
    PF              reduce using rule 44 (Fator -> ID .)


state 41

    (18) Inst -> CALL ID . PV

    PV              shift and go to state 60


state 42

    (19) Inst -> FOR PA . Inst Logica PV IFor PF DO CA Insts CF
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Inst                           shift and go to state 61

state 43

    (20) Inst -> IF PA . Logica PF CA Insts CF
    (21) Inst -> IF PA . Logica PF CA Insts CF ELSE CA Insts CF
    (24) Logica -> . Logica AND Cond
    (25) Logica -> . Logica OR Cond
    (26) Logica -> . NOT Cond
    (27) Logica -> . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    NOT             shift and go to state 58
    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Logica                         shift and go to state 62
    Cond                           shift and go to state 57
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 44

    (11) Instrucoes -> INSTRUCOES CA Insts . CF

    CF              shift and go to state 63


state 45

    (6) Declaracoes -> DECLARACOES CA Decls CF .

    INSTRUCOES      reduce using rule 6 (Declaracoes -> DECLARACOES CA Decls CF .)


state 46

    (7) Decls -> Decl Decls .

    CF              reduce using rule 7 (Decls -> Decl Decls .)


state 47

    (9) Decl -> VAR ID . PV
    (10) Decl -> VAR ID . IGUAL Exp PV

    PV              shift and go to state 64
    IGUAL           shift and go to state 65


state 48

    (14) Inst -> ID IGUAL Exp . PV
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    PV              shift and go to state 66
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 49

    (16) Inst -> LER ID PV .

    ID              reduce using rule 16 (Inst -> LER ID PV .)
    LER             reduce using rule 16 (Inst -> LER ID PV .)
    ESCREVER        reduce using rule 16 (Inst -> LER ID PV .)
    CALL            reduce using rule 16 (Inst -> LER ID PV .)
    FOR             reduce using rule 16 (Inst -> LER ID PV .)
    IF              reduce using rule 16 (Inst -> LER ID PV .)
    CF              reduce using rule 16 (Inst -> LER ID PV .)
    NOT             reduce using rule 16 (Inst -> LER ID PV .)
    (               reduce using rule 16 (Inst -> LER ID PV .)
    NUM             reduce using rule 16 (Inst -> LER ID PV .)


state 50

    (17) Inst -> ESCREVER Frase PV .

    ID              reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    LER             reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    ESCREVER        reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    CALL            reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    FOR             reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    IF              reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    CF              reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    NOT             reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    (               reduce using rule 17 (Inst -> ESCREVER Frase PV .)
    NUM             reduce using rule 17 (Inst -> ESCREVER Frase PV .)


state 51

    (35) Exp -> Exp SOMA . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Termo                          shift and go to state 67
    Fator                          shift and go to state 37

state 52

    (36) Exp -> Exp SUB . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Termo                          shift and go to state 68
    Fator                          shift and go to state 37

state 53

    (38) Termo -> Termo MUL . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Fator                          shift and go to state 69

state 54

    (39) Termo -> Termo DIV . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Fator                          shift and go to state 70

state 55

    (40) Termo -> Termo MOD . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Fator                          shift and go to state 71

state 56

    (42) Fator -> ( Logica . )
    (24) Logica -> Logica . AND Cond
    (25) Logica -> Logica . OR Cond

    )               shift and go to state 72
    AND             shift and go to state 73
    OR              shift and go to state 74


state 57

    (27) Logica -> Cond .
    (28) Cond -> Cond . MAIOR Exp
    (29) Cond -> Cond . MENOR Exp
    (30) Cond -> Cond . MAIORI Exp
    (31) Cond -> Cond . MENORI Exp
    (32) Cond -> Cond . II Exp
    (33) Cond -> Cond . DIF Exp

    )               reduce using rule 27 (Logica -> Cond .)
    AND             reduce using rule 27 (Logica -> Cond .)
    OR              reduce using rule 27 (Logica -> Cond .)
    PF              reduce using rule 27 (Logica -> Cond .)
    PV              reduce using rule 27 (Logica -> Cond .)
    MAIOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAIORI          shift and go to state 77
    MENORI          shift and go to state 78
    II              shift and go to state 79
    DIF             shift and go to state 80


state 58

    (26) Logica -> NOT . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Cond                           shift and go to state 81
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 59

    (34) Cond -> Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 34 (Cond -> Exp .)
    MENOR           reduce using rule 34 (Cond -> Exp .)
    MAIORI          reduce using rule 34 (Cond -> Exp .)
    MENORI          reduce using rule 34 (Cond -> Exp .)
    II              reduce using rule 34 (Cond -> Exp .)
    DIF             reduce using rule 34 (Cond -> Exp .)
    )               reduce using rule 34 (Cond -> Exp .)
    AND             reduce using rule 34 (Cond -> Exp .)
    OR              reduce using rule 34 (Cond -> Exp .)
    PF              reduce using rule 34 (Cond -> Exp .)
    PV              reduce using rule 34 (Cond -> Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 60

    (18) Inst -> CALL ID PV .

    ID              reduce using rule 18 (Inst -> CALL ID PV .)
    LER             reduce using rule 18 (Inst -> CALL ID PV .)
    ESCREVER        reduce using rule 18 (Inst -> CALL ID PV .)
    CALL            reduce using rule 18 (Inst -> CALL ID PV .)
    FOR             reduce using rule 18 (Inst -> CALL ID PV .)
    IF              reduce using rule 18 (Inst -> CALL ID PV .)
    CF              reduce using rule 18 (Inst -> CALL ID PV .)
    NOT             reduce using rule 18 (Inst -> CALL ID PV .)
    (               reduce using rule 18 (Inst -> CALL ID PV .)
    NUM             reduce using rule 18 (Inst -> CALL ID PV .)


state 61

    (19) Inst -> FOR PA Inst . Logica PV IFor PF DO CA Insts CF
    (24) Logica -> . Logica AND Cond
    (25) Logica -> . Logica OR Cond
    (26) Logica -> . NOT Cond
    (27) Logica -> . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    NOT             shift and go to state 58
    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Logica                         shift and go to state 82
    Cond                           shift and go to state 57
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 62

    (20) Inst -> IF PA Logica . PF CA Insts CF
    (21) Inst -> IF PA Logica . PF CA Insts CF ELSE CA Insts CF
    (24) Logica -> Logica . AND Cond
    (25) Logica -> Logica . OR Cond

    PF              shift and go to state 83
    AND             shift and go to state 73
    OR              shift and go to state 74


state 63

    (11) Instrucoes -> INSTRUCOES CA Insts CF .

    CF              reduce using rule 11 (Instrucoes -> INSTRUCOES CA Insts CF .)


state 64

    (9) Decl -> VAR ID PV .

    VAR             reduce using rule 9 (Decl -> VAR ID PV .)
    CF              reduce using rule 9 (Decl -> VAR ID PV .)


state 65

    (10) Decl -> VAR ID IGUAL . Exp PV
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 84
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 66

    (14) Inst -> ID IGUAL Exp PV .

    ID              reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    LER             reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    ESCREVER        reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    CALL            reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    FOR             reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    IF              reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    CF              reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    NOT             reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    (               reduce using rule 14 (Inst -> ID IGUAL Exp PV .)
    NUM             reduce using rule 14 (Inst -> ID IGUAL Exp PV .)


state 67

    (35) Exp -> Exp SOMA Termo .
    (38) Termo -> Termo . MUL Fator
    (39) Termo -> Termo . DIV Fator
    (40) Termo -> Termo . MOD Fator

    SOMA            reduce using rule 35 (Exp -> Exp SOMA Termo .)
    SUB             reduce using rule 35 (Exp -> Exp SOMA Termo .)
    PV              reduce using rule 35 (Exp -> Exp SOMA Termo .)
    MAIOR           reduce using rule 35 (Exp -> Exp SOMA Termo .)
    MENOR           reduce using rule 35 (Exp -> Exp SOMA Termo .)
    MAIORI          reduce using rule 35 (Exp -> Exp SOMA Termo .)
    MENORI          reduce using rule 35 (Exp -> Exp SOMA Termo .)
    II              reduce using rule 35 (Exp -> Exp SOMA Termo .)
    DIF             reduce using rule 35 (Exp -> Exp SOMA Termo .)
    )               reduce using rule 35 (Exp -> Exp SOMA Termo .)
    AND             reduce using rule 35 (Exp -> Exp SOMA Termo .)
    OR              reduce using rule 35 (Exp -> Exp SOMA Termo .)
    PF              reduce using rule 35 (Exp -> Exp SOMA Termo .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    MOD             shift and go to state 55


state 68

    (36) Exp -> Exp SUB Termo .
    (38) Termo -> Termo . MUL Fator
    (39) Termo -> Termo . DIV Fator
    (40) Termo -> Termo . MOD Fator

    SOMA            reduce using rule 36 (Exp -> Exp SUB Termo .)
    SUB             reduce using rule 36 (Exp -> Exp SUB Termo .)
    PV              reduce using rule 36 (Exp -> Exp SUB Termo .)
    MAIOR           reduce using rule 36 (Exp -> Exp SUB Termo .)
    MENOR           reduce using rule 36 (Exp -> Exp SUB Termo .)
    MAIORI          reduce using rule 36 (Exp -> Exp SUB Termo .)
    MENORI          reduce using rule 36 (Exp -> Exp SUB Termo .)
    II              reduce using rule 36 (Exp -> Exp SUB Termo .)
    DIF             reduce using rule 36 (Exp -> Exp SUB Termo .)
    )               reduce using rule 36 (Exp -> Exp SUB Termo .)
    AND             reduce using rule 36 (Exp -> Exp SUB Termo .)
    OR              reduce using rule 36 (Exp -> Exp SUB Termo .)
    PF              reduce using rule 36 (Exp -> Exp SUB Termo .)
    MUL             shift and go to state 53
    DIV             shift and go to state 54
    MOD             shift and go to state 55


state 69

    (38) Termo -> Termo MUL Fator .

    MUL             reduce using rule 38 (Termo -> Termo MUL Fator .)
    DIV             reduce using rule 38 (Termo -> Termo MUL Fator .)
    MOD             reduce using rule 38 (Termo -> Termo MUL Fator .)
    SOMA            reduce using rule 38 (Termo -> Termo MUL Fator .)
    SUB             reduce using rule 38 (Termo -> Termo MUL Fator .)
    PV              reduce using rule 38 (Termo -> Termo MUL Fator .)
    MAIOR           reduce using rule 38 (Termo -> Termo MUL Fator .)
    MENOR           reduce using rule 38 (Termo -> Termo MUL Fator .)
    MAIORI          reduce using rule 38 (Termo -> Termo MUL Fator .)
    MENORI          reduce using rule 38 (Termo -> Termo MUL Fator .)
    II              reduce using rule 38 (Termo -> Termo MUL Fator .)
    DIF             reduce using rule 38 (Termo -> Termo MUL Fator .)
    )               reduce using rule 38 (Termo -> Termo MUL Fator .)
    AND             reduce using rule 38 (Termo -> Termo MUL Fator .)
    OR              reduce using rule 38 (Termo -> Termo MUL Fator .)
    PF              reduce using rule 38 (Termo -> Termo MUL Fator .)


state 70

    (39) Termo -> Termo DIV Fator .

    MUL             reduce using rule 39 (Termo -> Termo DIV Fator .)
    DIV             reduce using rule 39 (Termo -> Termo DIV Fator .)
    MOD             reduce using rule 39 (Termo -> Termo DIV Fator .)
    SOMA            reduce using rule 39 (Termo -> Termo DIV Fator .)
    SUB             reduce using rule 39 (Termo -> Termo DIV Fator .)
    PV              reduce using rule 39 (Termo -> Termo DIV Fator .)
    MAIOR           reduce using rule 39 (Termo -> Termo DIV Fator .)
    MENOR           reduce using rule 39 (Termo -> Termo DIV Fator .)
    MAIORI          reduce using rule 39 (Termo -> Termo DIV Fator .)
    MENORI          reduce using rule 39 (Termo -> Termo DIV Fator .)
    II              reduce using rule 39 (Termo -> Termo DIV Fator .)
    DIF             reduce using rule 39 (Termo -> Termo DIV Fator .)
    )               reduce using rule 39 (Termo -> Termo DIV Fator .)
    AND             reduce using rule 39 (Termo -> Termo DIV Fator .)
    OR              reduce using rule 39 (Termo -> Termo DIV Fator .)
    PF              reduce using rule 39 (Termo -> Termo DIV Fator .)


state 71

    (40) Termo -> Termo MOD Fator .

    MUL             reduce using rule 40 (Termo -> Termo MOD Fator .)
    DIV             reduce using rule 40 (Termo -> Termo MOD Fator .)
    MOD             reduce using rule 40 (Termo -> Termo MOD Fator .)
    SOMA            reduce using rule 40 (Termo -> Termo MOD Fator .)
    SUB             reduce using rule 40 (Termo -> Termo MOD Fator .)
    PV              reduce using rule 40 (Termo -> Termo MOD Fator .)
    MAIOR           reduce using rule 40 (Termo -> Termo MOD Fator .)
    MENOR           reduce using rule 40 (Termo -> Termo MOD Fator .)
    MAIORI          reduce using rule 40 (Termo -> Termo MOD Fator .)
    MENORI          reduce using rule 40 (Termo -> Termo MOD Fator .)
    II              reduce using rule 40 (Termo -> Termo MOD Fator .)
    DIF             reduce using rule 40 (Termo -> Termo MOD Fator .)
    )               reduce using rule 40 (Termo -> Termo MOD Fator .)
    AND             reduce using rule 40 (Termo -> Termo MOD Fator .)
    OR              reduce using rule 40 (Termo -> Termo MOD Fator .)
    PF              reduce using rule 40 (Termo -> Termo MOD Fator .)


state 72

    (42) Fator -> ( Logica ) .

    MUL             reduce using rule 42 (Fator -> ( Logica ) .)
    DIV             reduce using rule 42 (Fator -> ( Logica ) .)
    MOD             reduce using rule 42 (Fator -> ( Logica ) .)
    SOMA            reduce using rule 42 (Fator -> ( Logica ) .)
    SUB             reduce using rule 42 (Fator -> ( Logica ) .)
    PV              reduce using rule 42 (Fator -> ( Logica ) .)
    MAIOR           reduce using rule 42 (Fator -> ( Logica ) .)
    MENOR           reduce using rule 42 (Fator -> ( Logica ) .)
    MAIORI          reduce using rule 42 (Fator -> ( Logica ) .)
    MENORI          reduce using rule 42 (Fator -> ( Logica ) .)
    II              reduce using rule 42 (Fator -> ( Logica ) .)
    DIF             reduce using rule 42 (Fator -> ( Logica ) .)
    )               reduce using rule 42 (Fator -> ( Logica ) .)
    AND             reduce using rule 42 (Fator -> ( Logica ) .)
    OR              reduce using rule 42 (Fator -> ( Logica ) .)
    PF              reduce using rule 42 (Fator -> ( Logica ) .)


state 73

    (24) Logica -> Logica AND . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Cond                           shift and go to state 85
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 74

    (25) Logica -> Logica OR . Cond
    (28) Cond -> . Cond MAIOR Exp
    (29) Cond -> . Cond MENOR Exp
    (30) Cond -> . Cond MAIORI Exp
    (31) Cond -> . Cond MENORI Exp
    (32) Cond -> . Cond II Exp
    (33) Cond -> . Cond DIF Exp
    (34) Cond -> . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Cond                           shift and go to state 86
    Exp                            shift and go to state 59
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 75

    (28) Cond -> Cond MAIOR . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 87
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 76

    (29) Cond -> Cond MENOR . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 88
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 77

    (30) Cond -> Cond MAIORI . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 89
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 78

    (31) Cond -> Cond MENORI . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 90
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 79

    (32) Cond -> Cond II . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 91
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 80

    (33) Cond -> Cond DIF . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 92
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 81

    (26) Logica -> NOT Cond .
    (28) Cond -> Cond . MAIOR Exp
    (29) Cond -> Cond . MENOR Exp
    (30) Cond -> Cond . MAIORI Exp
    (31) Cond -> Cond . MENORI Exp
    (32) Cond -> Cond . II Exp
    (33) Cond -> Cond . DIF Exp

    )               reduce using rule 26 (Logica -> NOT Cond .)
    AND             reduce using rule 26 (Logica -> NOT Cond .)
    OR              reduce using rule 26 (Logica -> NOT Cond .)
    PF              reduce using rule 26 (Logica -> NOT Cond .)
    PV              reduce using rule 26 (Logica -> NOT Cond .)
    MAIOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAIORI          shift and go to state 77
    MENORI          shift and go to state 78
    II              shift and go to state 79
    DIF             shift and go to state 80


state 82

    (19) Inst -> FOR PA Inst Logica . PV IFor PF DO CA Insts CF
    (24) Logica -> Logica . AND Cond
    (25) Logica -> Logica . OR Cond

    PV              shift and go to state 93
    AND             shift and go to state 73
    OR              shift and go to state 74


state 83

    (20) Inst -> IF PA Logica PF . CA Insts CF
    (21) Inst -> IF PA Logica PF . CA Insts CF ELSE CA Insts CF

    CA              shift and go to state 94


state 84

    (10) Decl -> VAR ID IGUAL Exp . PV
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    PV              shift and go to state 95
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 85

    (24) Logica -> Logica AND Cond .
    (28) Cond -> Cond . MAIOR Exp
    (29) Cond -> Cond . MENOR Exp
    (30) Cond -> Cond . MAIORI Exp
    (31) Cond -> Cond . MENORI Exp
    (32) Cond -> Cond . II Exp
    (33) Cond -> Cond . DIF Exp

    )               reduce using rule 24 (Logica -> Logica AND Cond .)
    AND             reduce using rule 24 (Logica -> Logica AND Cond .)
    OR              reduce using rule 24 (Logica -> Logica AND Cond .)
    PF              reduce using rule 24 (Logica -> Logica AND Cond .)
    PV              reduce using rule 24 (Logica -> Logica AND Cond .)
    MAIOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAIORI          shift and go to state 77
    MENORI          shift and go to state 78
    II              shift and go to state 79
    DIF             shift and go to state 80


state 86

    (25) Logica -> Logica OR Cond .
    (28) Cond -> Cond . MAIOR Exp
    (29) Cond -> Cond . MENOR Exp
    (30) Cond -> Cond . MAIORI Exp
    (31) Cond -> Cond . MENORI Exp
    (32) Cond -> Cond . II Exp
    (33) Cond -> Cond . DIF Exp

    )               reduce using rule 25 (Logica -> Logica OR Cond .)
    AND             reduce using rule 25 (Logica -> Logica OR Cond .)
    OR              reduce using rule 25 (Logica -> Logica OR Cond .)
    PF              reduce using rule 25 (Logica -> Logica OR Cond .)
    PV              reduce using rule 25 (Logica -> Logica OR Cond .)
    MAIOR           shift and go to state 75
    MENOR           shift and go to state 76
    MAIORI          shift and go to state 77
    MENORI          shift and go to state 78
    II              shift and go to state 79
    DIF             shift and go to state 80


state 87

    (28) Cond -> Cond MAIOR Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    MENOR           reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    MAIORI          reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    MENORI          reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    II              reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    DIF             reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    )               reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    AND             reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    OR              reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    PF              reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    PV              reduce using rule 28 (Cond -> Cond MAIOR Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 88

    (29) Cond -> Cond MENOR Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 29 (Cond -> Cond MENOR Exp .)
    MENOR           reduce using rule 29 (Cond -> Cond MENOR Exp .)
    MAIORI          reduce using rule 29 (Cond -> Cond MENOR Exp .)
    MENORI          reduce using rule 29 (Cond -> Cond MENOR Exp .)
    II              reduce using rule 29 (Cond -> Cond MENOR Exp .)
    DIF             reduce using rule 29 (Cond -> Cond MENOR Exp .)
    )               reduce using rule 29 (Cond -> Cond MENOR Exp .)
    AND             reduce using rule 29 (Cond -> Cond MENOR Exp .)
    OR              reduce using rule 29 (Cond -> Cond MENOR Exp .)
    PF              reduce using rule 29 (Cond -> Cond MENOR Exp .)
    PV              reduce using rule 29 (Cond -> Cond MENOR Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 89

    (30) Cond -> Cond MAIORI Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    MENOR           reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    MAIORI          reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    MENORI          reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    II              reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    DIF             reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    )               reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    AND             reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    OR              reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    PF              reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    PV              reduce using rule 30 (Cond -> Cond MAIORI Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 90

    (31) Cond -> Cond MENORI Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 31 (Cond -> Cond MENORI Exp .)
    MENOR           reduce using rule 31 (Cond -> Cond MENORI Exp .)
    MAIORI          reduce using rule 31 (Cond -> Cond MENORI Exp .)
    MENORI          reduce using rule 31 (Cond -> Cond MENORI Exp .)
    II              reduce using rule 31 (Cond -> Cond MENORI Exp .)
    DIF             reduce using rule 31 (Cond -> Cond MENORI Exp .)
    )               reduce using rule 31 (Cond -> Cond MENORI Exp .)
    AND             reduce using rule 31 (Cond -> Cond MENORI Exp .)
    OR              reduce using rule 31 (Cond -> Cond MENORI Exp .)
    PF              reduce using rule 31 (Cond -> Cond MENORI Exp .)
    PV              reduce using rule 31 (Cond -> Cond MENORI Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 91

    (32) Cond -> Cond II Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 32 (Cond -> Cond II Exp .)
    MENOR           reduce using rule 32 (Cond -> Cond II Exp .)
    MAIORI          reduce using rule 32 (Cond -> Cond II Exp .)
    MENORI          reduce using rule 32 (Cond -> Cond II Exp .)
    II              reduce using rule 32 (Cond -> Cond II Exp .)
    DIF             reduce using rule 32 (Cond -> Cond II Exp .)
    )               reduce using rule 32 (Cond -> Cond II Exp .)
    AND             reduce using rule 32 (Cond -> Cond II Exp .)
    OR              reduce using rule 32 (Cond -> Cond II Exp .)
    PF              reduce using rule 32 (Cond -> Cond II Exp .)
    PV              reduce using rule 32 (Cond -> Cond II Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 92

    (33) Cond -> Cond DIF Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    MAIOR           reduce using rule 33 (Cond -> Cond DIF Exp .)
    MENOR           reduce using rule 33 (Cond -> Cond DIF Exp .)
    MAIORI          reduce using rule 33 (Cond -> Cond DIF Exp .)
    MENORI          reduce using rule 33 (Cond -> Cond DIF Exp .)
    II              reduce using rule 33 (Cond -> Cond DIF Exp .)
    DIF             reduce using rule 33 (Cond -> Cond DIF Exp .)
    )               reduce using rule 33 (Cond -> Cond DIF Exp .)
    AND             reduce using rule 33 (Cond -> Cond DIF Exp .)
    OR              reduce using rule 33 (Cond -> Cond DIF Exp .)
    PF              reduce using rule 33 (Cond -> Cond DIF Exp .)
    PV              reduce using rule 33 (Cond -> Cond DIF Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 93

    (19) Inst -> FOR PA Inst Logica PV . IFor PF DO CA Insts CF
    (15) IFor -> . ID IGUAL Exp

    ID              shift and go to state 97

    IFor                           shift and go to state 96

state 94

    (20) Inst -> IF PA Logica PF CA . Insts CF
    (21) Inst -> IF PA Logica PF CA . Insts CF ELSE CA Insts CF
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Insts                          shift and go to state 98
    Inst                           shift and go to state 18

state 95

    (10) Decl -> VAR ID IGUAL Exp PV .

    VAR             reduce using rule 10 (Decl -> VAR ID IGUAL Exp PV .)
    CF              reduce using rule 10 (Decl -> VAR ID IGUAL Exp PV .)


state 96

    (19) Inst -> FOR PA Inst Logica PV IFor . PF DO CA Insts CF

    PF              shift and go to state 99


state 97

    (15) IFor -> ID . IGUAL Exp

    IGUAL           shift and go to state 100


state 98

    (20) Inst -> IF PA Logica PF CA Insts . CF
    (21) Inst -> IF PA Logica PF CA Insts . CF ELSE CA Insts CF

    CF              shift and go to state 101


state 99

    (19) Inst -> FOR PA Inst Logica PV IFor PF . DO CA Insts CF

    DO              shift and go to state 102


state 100

    (15) IFor -> ID IGUAL . Exp
    (35) Exp -> . Exp SOMA Termo
    (36) Exp -> . Exp SUB Termo
    (37) Exp -> . Termo
    (38) Termo -> . Termo MUL Fator
    (39) Termo -> . Termo DIV Fator
    (40) Termo -> . Termo MOD Fator
    (41) Termo -> . Fator
    (42) Fator -> . ( Logica )
    (43) Fator -> . NUM
    (44) Fator -> . ID

    (               shift and go to state 38
    NUM             shift and go to state 39
    ID              shift and go to state 40

    Exp                            shift and go to state 103
    Termo                          shift and go to state 36
    Fator                          shift and go to state 37

state 101

    (20) Inst -> IF PA Logica PF CA Insts CF .
    (21) Inst -> IF PA Logica PF CA Insts CF . ELSE CA Insts CF

    ID              reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    LER             reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    ESCREVER        reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    CALL            reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    FOR             reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    IF              reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    CF              reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    NOT             reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    (               reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    NUM             reduce using rule 20 (Inst -> IF PA Logica PF CA Insts CF .)
    ELSE            shift and go to state 104


state 102

    (19) Inst -> FOR PA Inst Logica PV IFor PF DO . CA Insts CF

    CA              shift and go to state 105


state 103

    (15) IFor -> ID IGUAL Exp .
    (35) Exp -> Exp . SOMA Termo
    (36) Exp -> Exp . SUB Termo

    PF              reduce using rule 15 (IFor -> ID IGUAL Exp .)
    SOMA            shift and go to state 51
    SUB             shift and go to state 52


state 104

    (21) Inst -> IF PA Logica PF CA Insts CF ELSE . CA Insts CF

    CA              shift and go to state 106


state 105

    (19) Inst -> FOR PA Inst Logica PV IFor PF DO CA . Insts CF
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Inst                           shift and go to state 18
    Insts                          shift and go to state 107

state 106

    (21) Inst -> IF PA Logica PF CA Insts CF ELSE CA . Insts CF
    (12) Insts -> . Inst Insts
    (13) Insts -> .
    (14) Inst -> . ID IGUAL Exp PV
    (16) Inst -> . LER ID PV
    (17) Inst -> . ESCREVER Frase PV
    (18) Inst -> . CALL ID PV
    (19) Inst -> . FOR PA Inst Logica PV IFor PF DO CA Insts CF
    (20) Inst -> . IF PA Logica PF CA Insts CF
    (21) Inst -> . IF PA Logica PF CA Insts CF ELSE CA Insts CF

    CF              reduce using rule 13 (Insts -> .)
    ID              shift and go to state 16
    LER             shift and go to state 19
    ESCREVER        shift and go to state 20
    CALL            shift and go to state 21
    FOR             shift and go to state 22
    IF              shift and go to state 23

    Insts                          shift and go to state 108
    Inst                           shift and go to state 18

state 107

    (19) Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts . CF

    CF              shift and go to state 109


state 108

    (21) Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts . CF

    CF              shift and go to state 110


state 109

    (19) Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .

    ID              reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    LER             reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    ESCREVER        reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    CALL            reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    FOR             reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    IF              reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    CF              reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    NOT             reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    (               reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)
    NUM             reduce using rule 19 (Inst -> FOR PA Inst Logica PV IFor PF DO CA Insts CF .)


state 110

    (21) Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .

    ID              reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    LER             reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    ESCREVER        reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    CALL            reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    FOR             reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    IF              reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    CF              reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    NOT             reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    (               reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)
    NUM             reduce using rule 21 (Inst -> IF PA Logica PF CA Insts CF ELSE CA Insts CF .)

